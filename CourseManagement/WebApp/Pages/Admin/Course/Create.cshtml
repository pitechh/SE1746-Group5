@page
@model WebApp.Pages.Admin.Course.CreateModel
@{
    Layout = "_ManagementLayout";
}
<div class="popular-courses">
    <div class="mt-5">
        <a class="ms-5 text-decoration-none fs-2 p-0 back__page-btn" href="./List">
            <span><i class="fa-solid fa-caret-left"></i></span>
            <span class="">Quản lý khóa học</span>
        </a>
    </div>
    <h2 class="courses-title mt-5 px-5">Điều hành khóa học</h2>
    <div class="popular-header px-5">
        <p class="popular-des">Học sáng tạo, thành công vượt trội</p>
        <!-- <button class="popular-button">Add course</button> -->
    </div>
    <div id="spinner" style="display: none;">
        <div class="loading-spinner"></div>
    </div>
    <div class="container mt-5">
        <div class="courses-container">

            <!-- video form -->
            <form id="createForm" method="POST" style="margin: 20px;" enctype="multipart/form-data">
                <label class="form-label fs-4">Video giới thiệu</label>
                <input type="hidden" id="createdBy" name="CreateBy">
                <div class="mb-3 box-upload_file">
                    <div id="dropArea" class="drop-area">
                        <input type="file" id="videoUpload" name="PreviewVideo" accept="video/*" class="file-input" style="display: none;">
                        <div id="uploadIcon" class="upload-icon">
                            <i class="fa-solid fa-upload"></i>
                            <p>Kéo thả video vào đây hoặc click để chọn</p>
                        </div>
                        <video id="videoPreview" width="100%" controls style="display: none;"></video>
                    </div>
                    <span class="text-danger mb-3 fs-4"></span>
                </div>

                <label class="form-label fs-4">Ảnh</label>

                <div class="mb-3 box-upload_file">
                    <div id="dropAreaImage" class="drop-area">
                        <input type="file" id="imageUpload" accept="image/*" name="Thumbnail" class="file-input" style="display: none;">
                        <div id="uploadIconImage" class="upload-icon">
                            <i class="fa-solid fa-upload"></i>
                            <p>Kéo thả hình ảnh vào đây hoặc click để chọn</p>
                        </div>
                        <img id="imagePreview" width="100%" style="display: none;" />
                    </div>
                    <span class="text-danger mb-3 fs-4"></span>
                </div>

                <div class="">
                    <div class="progress_upload">
                        <div class="progress-done_upload" data-done="70">70%</div>
                    </div>
                </div>

                <div class="mb-3">
                    <label class="form-label fs-4" >Tiêu đề</label>
                    <input type="text" class="form-control fs-3 p-2" name="Title">
                    <span class="text-danger mb-3 fs-4"></span>
                </div>
                <div class="mb-3">
                    <label class="form-label fs-4" >Giá cả</label>
                    <input type="number" class="form-control fs-3 p-2" name="Price">
                    <span  class="text-danger mb-3 fs-4"></span>
                </div>
                <div class="mb-3">
                    <label class="form-label fs-4" >Danh mục</label>
                    <select id="select-cate" class="form-select form-select-lg mb-3 p-2 fs-3" name="Cate">
                        @foreach (var category in Model.Categories)
                        {
                            <option value="@category.id">@category.name</option>
                        }
                    </select>
                    <span class="text-danger mb-3 fs-4"></span>
                </div>
                <div class="mb-3">
                    <label class="form-label fs-4" for="limitDayInput">Ngày tối đa hoàn thành khóa học</label>
                    <input type="number" class="form-control fs-3 p-2" name="Limit" placeholder="Enter the number of days">
                    <span class="text-danger mb-3 fs-4"></span>
                </div>

                <div class="mb-3">
                    <label class="form-label fs-4">Mô tả chi tiết</label>
                    <textarea id="default" type="text" class="form-control fs-3 p-2" name="Desc"></textarea>
                    <span class="text-danger mb-3 fs-4"></span>
                </div>
                <button type="submit" class="btn btn-primary fs-4 px-5 py-3">Add lesson</button>
            </form>
        </div>
    </div>
</div>
<div class="toast-container position-fixed top-0 end-0 p-3" style="z-index: 1055;">
    <!-- Success Toast -->
    <div class="toast-container position-fixed top-0 end-0 p-3" style="z-index: 1055;">
    </div>
</div>
<script>
    document.addEventListener('DOMContentLoaded', () => {
        // Lấy userId từ localStorage và gán vào input hidden
        const userInfo = JSON.parse(localStorage.getItem('userInfo'));
        if (userInfo && userInfo.userId) {
            document.getElementById('createdBy').value = userInfo.userId;
        }
    });

    // Khu vực upload video
    const dropArea = document.getElementById('dropArea');
    const fileInput = document.getElementById('videoUpload');
    const videoPreview = document.getElementById('videoPreview');
    const uploadIcon = document.getElementById('uploadIcon');

    // Khu vực upload ảnh
    const dropAreaImage = document.getElementById('dropAreaImage');
    const fileInputImage = document.getElementById('imageUpload');
    const imagePreview = document.getElementById('imagePreview');
    const uploadIconImage = document.getElementById('uploadIconImage');

    // Mở file dialog khi click vào khu vực drop (video)
    dropArea.addEventListener('click', () => {
        fileInput.click();
    });

    // Mở file dialog khi click vào khu vực drop (ảnh)
    dropAreaImage.addEventListener('click', () => {
        fileInputImage.click();
    });

    // Xử lý khi file được chọn hoặc kéo thả (video)
    fileInput.addEventListener('change', handleFiles);
    dropArea.addEventListener('dragover', (event) => {
        event.preventDefault();
        dropArea.classList.add('dragging');
    });

    dropArea.addEventListener('dragleave', () => {
        dropArea.classList.remove('dragging');
    });

    dropArea.addEventListener('drop', (event) => {
        event.preventDefault();
        dropArea.classList.remove('dragging');
        const files = event.dataTransfer.files;
        handleFiles({ target: { files } });
    });

    function handleFiles(event) {
        const file = event.target.files[0];

        if (file && file.type.startsWith('video/')) {
            const videoURL = URL.createObjectURL(file);
            videoPreview.src = videoURL;
            videoPreview.style.display = 'block';
            uploadIcon.style.display = 'none'; // Ẩn icon sau khi upload
        }
    }

    // Xử lý khi file được chọn hoặc kéo thả (ảnh)
    fileInputImage.addEventListener('change', handleImageFiles);
    dropAreaImage.addEventListener('dragover', (event) => {
        event.preventDefault();
        dropAreaImage.classList.add('dragging');
    });

    dropAreaImage.addEventListener('dragleave', () => {
        dropAreaImage.classList.remove('dragging');
    });

    dropAreaImage.addEventListener('drop', (event) => {
        event.preventDefault();
        dropAreaImage.classList.remove('dragging');
        const files = event.dataTransfer.files;
        handleImageFiles({ target: { files } });
    });

    function handleImageFiles(event) {
        const file = event.target.files[0];

        if (file && file.type.startsWith('image/')) {
            const imageURL = URL.createObjectURL(file);
            imagePreview.src = imageURL;
            imagePreview.style.display = 'block';
            uploadIconImage.style.display = 'none'; // Ẩn icon sau khi upload
        }
    }
    document.addEventListener('DOMContentLoaded', () => {
        const monthSelect = document.getElementById('monthSelect');
        const daySelect = document.getElementById('daySelect');
        const dayValidationMessage = document.getElementById('dayValidationMessage');

        // Populate the day select element based on the month selected
        monthSelect.addEventListener('change', () => {
            const selectedMonth = parseInt(monthSelect.value);
            daySelect.innerHTML = '<option value="">Select a day</option>'; // Reset days

            let daysInMonth = 31; // Default max days

            // Adjust days based on the selected month
            if ([4, 6, 9, 11].includes(selectedMonth)) {
                daysInMonth = 30; // April, June, September, November
            } else if (selectedMonth === 2) {
                daysInMonth = 28; // February
            }

            // Populate days
            for (let day = 1; day <= daysInMonth; day++) {
                const option = document.createElement('option');
                option.value = day;
                option.textContent = day;
                daySelect.appendChild(option);
            }
        });
    });

</script>